ISSUES


RADIX
1. ✅ replace the DaisyUI expandos
		tweak it so you can click without open-close (no bubble)
1. Replace all the buttons, labels, and inputs

PRIMARY CARD INTERACTIONS
1. bring over the new structure for relations
1. make the "add to deck" function work
1. bring over the "edit status"

AUTH
1. ✅ add AuthContext -- so far I've just mocked it with useQuery
1. ✅ add signOut action to AuthContext -- correction: mocked it with its own hook
1. ✅ figure out "redirect to home screen" on logout 
1. ✅ auth guard bounce, login, redirect back (only when not logged in)
1. @TODO in the _auth/login.tsx - why using hooks? we should have this already


NAVIGATION
1. ✅ get back the "active/inactive" link style in sidebar.tsx
1. properly use the disabled option on the nav links
1. ✅ probably set it to only active-match exact route matches
1. ✅ don't forget to add the Navbar
1. ✅ add context menus (links) to all the pages and scaffold pages

UX
1. Add activity graph to deck summaries :)) https://app.radicle.xyz/nodes/seed.radicle.xyz/rad:z4V1sjrXqjvFdnCUbxPFqd5p4DtH5/tree/src/components/ActivityDiagram.svelte
1. When a loader awaits, this is a time to show blank shell and transition in

BETTER FORMS
1. ✅ Try Zod https://v0.dev/chat/cddhdPsiX7x (this ex is for login form inputs)
1. ✅ Try react-formal https://jquense.github.io/react-formal/getting-started/
1. ✅ Try tanstack-form https://tanstack.com/form/latest/getting-started/react/overview
1. Convert the login form to use tanstack-form (with error handling)
1. Convert the signup form to use tanstack-form (with error handling)

DATA LOADING
1. ✅ replace useLang with router feature
1. ✅ replace the old useProfile and ProfileFull
1. ✅ refresh all the fetcher hooks w the select-paradigm code
1. research loaders, preloading, query client prefetching, etc. patterns so
		we can get the most out of things. 
		* access `auth` on first render inside the DaisyUI
		* suspend until profile loads
		* suspend /$lang routes until language & deck load
		* when the router loader is suspending and then stops, transition in
1. don't use `enabled` to waterfall useQueries on auth context
		perhaps this will just be a code convention only render components after auth
		perhaps there is a better way to use the params / data / keys

CROSS-PLATFORM
1. ✅ compile to android with tauri
 		Make Tauri work with HMR and Vite setup
1. compile to ios with tauri
